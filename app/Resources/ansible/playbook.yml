---

- hosts: all

  roles:
    - { role: mysql }
    #- { role: postgresql }
    - { role: php/phpunit }
    - { role: php/php-cs-fixer }
    - { role: php/pdepend }
    - { role: php/phpmd }
    - { role: php/phpcpd }
    - { role: php/phpcs }
    - { role: php/phploc }
    - { role: php/phpdoc }
    - { role: php/phpcb }
    - { role: bower }
    - { role: gulp }
    - { role: sass }
    - { role: sass/scss-lint }

  tasks:

    # Oh My Zsh
    - name: oh-my-zsh config plugins
      template: >
        src=templates/oh-my-zsh/plugins.zsh.j2
        dest=~/.oh-my-zsh/custom/plugins.zsh
    - name: oh-my-zsh config prompt
      lineinfile: >
        dest=~/.zshrc
        line="PROMPT='%{$fg[cyan]%}%n%{$fg[red]%}@%{$fg[cyan]%}%m %{$fg_bold[red]%} %{$fg_bold[green]%}%p %{$fg[cyan]%}%c %{$fg_bold[blue]%}$(git_prompt_info)%{$fg_bold[blue]%} % %{$reset_color%}'"
        regexp="^PROMPT="
    - name: oh-my-zsh config project
      template: >
        src=templates/oh-my-zsh/project.zsh.j2
        dest=~/.oh-my-zsh/custom/project.zsh

    # Php
    - name: php config custom fpm
      template: >
        src=templates/php/custom.ini.j2
        dest=/etc/php5/fpm/conf.d/100_custom.ini
      notify:
        - php restart
      sudo: yes
    - name: php config custom cli
      template: >
        src=templates/php/custom.ini.j2
        dest=/etc/php5/cli/conf.d/100_custom.ini
      sudo: yes

    # Nginx
    - name: nginx disable default
      shell: >
        ngxdissite default
        removes=/etc/nginx/sites-enabled/default
      notify:
        - nginx restart
      sudo: yes
    - name: nginx config vhost
      template: >
        src=templates/nginx/vhost.conf.j2
        dest=/etc/nginx/sites-available/vhost
      sudo: yes
    - name: nginx enable vhost
      shell: >
        ngxensite vhost
        creates=/etc/nginx/sites-enabled/vhost
      notify:
        - nginx restart
      sudo: yes

    # Project
    - name: project cache
      file: >
        path=/home/{{ user }}/cache
        state=directory
    - name: project logs
      file: >
        path=/home/{{ user }}/logs
        state=directory
    - name: project acl
      shell: >
        setfacl -R -m u:www-data:rwX -m u:{{ user }}:rwX /home/{{ user }}/cache /home/{{ user }}/logs && setfacl -dR -m u:www-data:rwx -m u:{{ user }}:rwx /home/{{ user }}/cache /home/{{ user }}/logs

  handlers:

    # Php
    - name: php restart
      service: >
        name=php5-fpm
        state=restarted
      sudo: yes

    # Nginx
    - name: nginx restart
      service: >
        name=nginx
        state=restarted
      sudo: yes
